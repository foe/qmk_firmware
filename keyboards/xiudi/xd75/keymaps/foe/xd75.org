#+TITLE: Xd75
#+PROPERTY: header-args :tangle ~/qmk_firmware/keyboards/xiudi/xd75/keymaps/foe/keymap.c :comments no :main no

This is my qmk firmware for my keyboard. I grew tired of organizing the keycode
array in plain text so I made it a literate .org file. I've never done this
before, so bear with me.

* Layers

  #+BEGIN_COMMENT
    #+NAME: empty-layer

  |  <6>   | <6>    | <6>    | <6>    | <6>    | <6>    | <6>    | <6>    | <6>    | <6>    | <6>    | <6>    | <6>    | <6>    | <6>    |
  |--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------|--------|--------|--------|
  | -      | -      | -      | -      | -      | -      | -      | -      | -      | -      | -      | -      | -      | -      | -      |
  | -      | -      | -      | -      | -      | -      | -      | -      | -      | -      | -      | -      | -      | -      | -      |
  | -      | -      | -      | -      | -      | -      | -      | -      | -      | -      | -      | -      | -      | -      | -      |
  | -      | -      | -      | -      | -      | -      | -      | -      | -      | -      | -      | -      | -      | -      | -      |
  | -      | -      | -      | -      | -      | -      | -      | -      | -      | -      | -      | -      | -      | -      | -      |
  |--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------|--------|--------|--------|
  #+END_COMMENT

  #+NAME: qwerty-layer
  |-------+-------+------+----+-------+-----+------+------+-------+-----+-------+------+------+---------+------|
  | GRV   | 1     | 2    | 3  | 4     | 5   | MINS | PSCR | EQL   | 6   | 7     | 8    | 9    | 0       | BSPC |
  | TAB   | Q     | W    | E  | R     | T   | LBRC | INS  | RBRC  | Y   | U     | I    | O    | P       | QUOT |
  | CTESC | A_NAV | S    | D  | F     | G   | HOME | DEL  | PGUP  | H   | J     | K    | L    | SMC_NAV | ENT  |
  | LSFT  | Z     | X    | C  | V     | B   | END  | UP   | PGDN  | N   | M     | COMM | DOT  | SLSH    | RSFT |
  | LCTL  | LGUI  | LALT | FN | LOWER | SPC | LEFT | DOWN | RIGHT | SPC | RASPC | FN   | RALT | RGUI    | BSLS |
  |-------+-------+------+----+-------+-----+------+------+-------+-----+-------+------+------+---------+------|

  #+NAME: colemak-layer
  |-------+-------+------+----+-------+-----+------+------+-------+-----+-------+------+------+------+------|
  | GRV   | 1     | 2    | 3  | 4     | 5   | MINS | PSCR | EQL   | 6   | 7     | 8    | 9    | 0    | BSPC |
  | TAB   | Q     | W    | F  | P     | B   | LBRC | INS  | RBRC  | J   | L     | U    | Y    | SCLN | QUOT |
  | CTESC | A_NAV | R    | S  | T     | G   | HOME | DEL  | PGUP  | M   | N     | E    | I    | O    | ENT  |
  | LSFT  | Z     | X    | C  | D     | V   | END  | UP   | PGDN  | K   | H     | COMM | DOT  | SLSH | RSFT |
  | LCTL  | LGUI  | LALT | FN | LOWER | SPC | LEFT | DOWN | RIGHT | SPC | RASPC | FN   | RALT | RGUI | BSLS |
  |-------+-------+------+----+-------+-----+------+------+-------+-----+-------+------+------+------+------|

  #+NAME: fn-layer
  |------+------+---------+------+----------+---------+------+------+------+------+------+----+------+------+------|
  | F12  | F1   | F2      | F3   | F4       | F5      | NLCK | SLSH | ASTR | F6   | F7   | F8 | F9   | F10  | F11  |
  | MSEL | CALC | MYCM    | MAIL | RGB_HUD  | RGB_HUI | P7   | P8   | P9   | MINS | --   | -- | PSCR | SLCK | PAUS |
  | MPRV | MPLY | MNXT    | ALTD | RGB_SAD  | RGB_SAI | P4   | P5   | P6   | PLUS | --   | -- | --   | --   | --   |
  | VOLD | MUTE | VOLU    | APP  | RGB_VAD  | RGB_VAI | P1   | P2   | P3   | PENT | --   | -- | --   | --   | --   |
  | --   | --   | RGB_TOG | FN   | RGB_RMOD | RGB_MOD | P0   | --   | PDOT | PENT | PENT | FN | --   | --   | --   |
  |------+------+---------+------+----------+---------+------+------+------+------+------+----+------+------+------|

  #+NAME: lower-layer
    |----+----+----+------+-----+----+----+----+----+------+------+------+------+-------+-----|
    | -- | -- | -- | --   | --  | -- | -- | -- | -- | --   | --   | --   | --   | --    | --  |
    | -- | -- | -- | --   | --  | -- | -- | -- | -- | --   | LCBR | RCBR | UNDS | EQL   | DQT |
    | -- | -- | -- | COLN | DQT | -- | -- | -- | -- | PERC | LPRN | RPRN | MINS | COLON | --  |
    | -- | -- | -- | --   | --  | -- | -- | -- | -- | PLUS | LBRC | RBRC | --   | --    | --  |
    | -- | -- | -- | --   | --  | -- | -- | -- | -- | --   | --   | --   | --   | --    | --  |
    |----+----+----+------+-----+----+----+----+----+------+------+------+------+-------+-----|

  #+NAME: raise-layer
    |----+----+----+--------+----------+----+----+----+----+------+------+------+------+-------+-----|
    | -- | -- | -- | --     | --       | -- | -- | -- | -- | --   | --   | --   | --   | --    | --  |
    | -- | -- | -- | --     | CLJ_TL   | -- | -- | -- | -- | --   | LCBR | RCBR | UNDS | EQL   | DQT |
    | -- | -- | -- | CLJ_HM | CLJ_TF   | -- | -- | -- | -- | PERC | LPRN | RPRN | MINS | COLON | --  |
    | -- | -- | -- | --     | CLJ_KEYS | -- | -- | -- | -- | DQT  | LBRC | RBRC | --   | --    | --  |
    | -- | -- | -- | --     | --       | -- | -- | -- | -- | --   | --   | --   | --   | --    | --  |
    |----+----+----+--------+----------+----+----+----+----+------+------+------+------+-------+-----|

  #+NAME: nav-layer
  |----+----+----+----+----+----+----+----+----+------+-------+-------+-------+----+--------|
  | -- | -- | -- | -- | -- | -- | -- | -- | -- | --   | --    | --    | CAPT  | -- | CTLBSP |
  | -- | -- | -- | -- | -- | -- | -- | -- | -- | HOME | CTRLD | CTRLU | END   | -- | --     |
  | -- | -- | -- | -- | -- | -- | -- | -- | -- | LEFT | DOWN  | UP    | RIGHT | -- | --     |
  | -- | -- | -- | -- | -- | -- | -- | -- | -- | --   | --    | --    | --    | -- | --     |
  | -- | -- | -- | -- | -- | -- | -- | -- | -- | --   | --    | --    | --    | -- | --     |
  |----+----+----+----+----+----+----+----+----+------+-------+-------+-------+----+--------|

  #+NAME: adjust-layer
  |----+-------+----+----+----+----+----+----+----+----+--------+---------+----+----+------|
  | -- | --    | -- | -- | -- | -- | -- | -- | -- | -- | --     | --      | -- | -- | SLEP |
  | -- | RESET | -- | -- | -- | -- | -- | -- | -- | -- | --     | --      | -- | -- | --   |
  | -- | --    | -- | -- | -- | -- | -- | -- | -- | -- | QWERTY | COLEMAK | -- | -- | --   |
  | -- | --    | -- | -- | -- | -- | -- | -- | -- | -- | --     | --      | -- | -- | --   |
  | -- | --    | -- | -- | -- | -- | -- | -- | -- | -- | --     | --      | -- | -- | --   |
  |----+-------+----+----+----+----+----+----+----+----+--------+---------+----+----+------|

* Keymap Conversion in Python

  This python can convert that table into the array needed for the keymap file. It
  simply prepends every key with "KC_". I used to use a dictionary to convert some
  keys from the table into qmk keycodes, but the double convertion was
  unneccessary so I just prepended all my macros with KC and moved all the
  implementation to the `process-user-input` function.

#+NAME:layer-to-array
#+BEGIN_SRC python :var keys=fn-layer :tangle no
row = 0
results = ''
while row < len(keys):
    key = 0
    while key < len(keys[row]):
        keyName = str(keys[row][key])
        if keyName == '--':
            keyName = 'TRNS'
        if keyName.startswith('RESET') or keyName.startswith('RGB') or keyName.startswith('EMACS') or keyName.startswith('CLJ'):
            results += keyName
        else:
            results += 'KC_' + keyName
        if key != 14:
            results += ', '
        key+=1
    if row != 4:
        results += ','
    results += '\n'
    row+=1
return results
#+END_SRC


* keymap.c

  Now that we laid out our layout, lets lay out our keymap file.


** Headers

   #+BEGIN_SRC C :noweb yes
#include QMK_KEYBOARD_H
   #+END_SRC

   #+RESULTS:

** Keycodes

        #+BEGIN_SRC C :noweb yes

enum xd75_keycodes {
  KC_QWERTY = SAFE_RANGE,
  KC_COLEMAK,
      EMACS_LEFT,
      EMACS_RIGHT,
      EMACS_DOWN,
      EMACS_UP,
      CLJ_TF,
      CLJ_TL,
      CLJ_HM,
      CLJ_KEYS
};


// Right-hand home row mods
#define KC_CTLBSP LCTL_T(KC_BSPC)


#define KC_CTESC   LCTL_T(KC_ESC)
#define KC_SFBSL   RSFT_T(KC_BSLS)
#define KC_SHINS   LSFT(KC_INS)
#define KC_CAPT    LSFT(KC_F9)
#define KC_CTRLU   LCTL(KC_U)
#define KC_CTRLD   LCTL(KC_D)
#define KC_ALTD    LALT(KC_D)
#define KC_FN      MO(_FN)
#define KC_RAISE   MO(_RAISE)
#define KC_LOWER   MO(_LOWER)
#define KC_RASPC   LT(_RAISE, KC_SPC)
#define KC_LOSPC   LT(_LOWER, KC_SPC)
#define KC_A_NAV   LT(_NAV, KC_A)
    #define KC_SMC_NAV LT(_NAV, KC_SCLN)

#+END_SRC

** Import Key table

   #+BEGIN_SRC C :noweb yes
enum xd75_layers {
_QWERTY,
_COLEMAK,
_FN,
_LOWER,
_RAISE,
_ADJUST,
    _NAV
};

const uint16_t PROGMEM keymaps[][MATRIX_ROWS][MATRIX_COLS] = {

   #+END_SRC

   #+RESULTS:

 #+BEGIN_SRC C :noweb yes
[_QWERTY] = LAYOUT_ortho_5x15(
<<layer-to-array(qwerty-layer)>>
),
[_COLEMAK] = LAYOUT_ortho_5x15(
<<layer-to-array(colemak-layer)>>
),
[_FN] = LAYOUT_ortho_5x15(
<<layer-to-array(fn-layer)>>
),
[_RAISE] = LAYOUT_ortho_5x15(
<<layer-to-array(raise-layer)>>
),
[_LOWER] = LAYOUT_ortho_5x15(
<<layer-to-array(lower-layer)>>
),
    [_NAV] = LAYOUT_ortho_5x15(
    <<layer-to-array(nav-layer)>>
    ),
[_ADJUST] = LAYOUT_ortho_5x15(
<<layer-to-array(adjust-layer)>>
)
};

 #+END_SRC

 #+RESULTS:

** Process User Input

   #+BEGIN_SRC C :noweb yes
layer_state_t layer_state_set_user(layer_state_t state) {
  return update_tri_layer_state(state, _LOWER, _RAISE, _ADJUST);
}

uint16_t get_tapping_term(uint16_t keycode, keyrecord_t *record) {
    switch (keycode) {
        case LT(_NAV, KC_A):
            return TAPPING_TERM + LONG_TAPPING_TERM;
        case LT(_NAV, KC_SCLN):
            return TAPPING_TERM + LONG_TAPPING_TERM;
        case LT(_RAISE, KC_SPC):
            return TAPPING_TERM + LONG_TAPPING_TERM;
        default:
            return TAPPING_TERM;
    }
}

bool process_record_user(uint16_t keycode, keyrecord_t *record) {
    switch (keycode)    {
   #+END_SRC

*** Layouts

    Set Colemak layout

#+BEGIN_SRC C :noweb yes
 case KC_COLEMAK:
 if (record->event.pressed) {
     set_single_persistent_default_layer(_COLEMAK);
 }
 return false;
 break;

#+END_SRC

    Set Qwerty layout.

#+BEGIN_SRC C :noweb yes
 case KC_QWERTY:
 if (record->event.pressed) {
     set_single_persistent_default_layer(_QWERTY);
 }
 return false;
 break;

#+END_SRC

                EMACS WINDOW 
            
 #+BEGIN_SRC C :noweb yes
   case CLJ_TF:
   if (record->event.pressed) {
      SEND_STRING("(-> )" SS_TAP(X_LEFT));
   }
   return true;
   break;
   case CLJ_TL:
   if (record->event.pressed) {
      SEND_STRING("(->> )" SS_TAP(X_LEFT));
   }
   return true;
   break;
   case CLJ_HM:
   if (record->event.pressed) {
      SEND_STRING("{:}" SS_TAP(X_LEFT));
   }
   return true;
   break;
   case CLJ_KEYS:
   if (record->event.pressed) {
      SEND_STRING("{:keys []}" SS_TAP(X_LEFT) SS_TAP(X_LEFT));
   }
   return true;
   break;

 #+END_SRC

*** End user input


    #+BEGIN_SRC C :noweb yes
 }
 return true;
 }
    #+End_src
    
